#!/usr/bin/env python

# Adopted from https://github.com/nodegit/nodegit/blob/4561dcb7c120474a4553baa27e4c4c2f4be23a2b/vendor/libgit2.gyp

Import("env")

env_ssh2 = env.Clone()

# Thirdparty source files.
libssh2_sources = [
    "libssh2/src/agent.c",
    "libssh2/src/bcrypt_pbkdf.c",
    "libssh2/src/blowfish.c",
    "libssh2/src/crypt.c",
    "libssh2/src/keepalive.c",
    "libssh2/src/libgcrypt.c",
    "libssh2/src/openssl.c",
    "libssh2/src/publickey.c",
    "libssh2/src/sftp.c",
    "libssh2/src/version.c",
    "libssh2/src/channel.c",
    "libssh2/src/global.c",
    "libssh2/src/kex.c",
    "libssh2/src/mac.c",
    "libssh2/src/packet.c",
    "libssh2/src/scp.c",
    "libssh2/src/transport.c",
    "libssh2/src/comp.c",
    "libssh2/src/hostkey.c",
    "libssh2/src/knownhost.c",
    "libssh2/src/misc.c",
    "libssh2/src/pem.c",
    "libssh2/src/session.c",
    "libssh2/src/userauth.c",
]

env_ssh2.Prepend(
    CPPPATH=[
        "libssh2/include/"
        "libssh2/src/"
    ]
)

env_ssh2.Prepend(
    CPPDEFINES=[
    ]
)

if env_ssh2["platform"] == "windows":
    env_ssh2.Append(
        CPPPATH=[
            "libssh2/include/",
            "libssh2/win32/"
        ]
    )
    libssh2_sources += [ "libssh2/src/agent_win.c", "libssh2/src/wincng.c"]
    env_ssh2.Append(
        CPPDEFINES=[
            "LIBSSH2_WINCNG",
            "HAVE_WINCNG"
        ]
    )
    env_ssh2.Append(LIBS = ["crypt32", "user32"])

if env_ssh2["platform"] == "osx":
    env_ssh2.Append(
        CPPPATH=[
            "libssh2/include/",
            "libssh2/os400/"
        ]
    )
    libssh2_sources += ["libssh2/os400/" + "*.c"]
    env_ssh2.Append(
        CPPDEFINES=[]
    )

if env_ssh2["platform"] == "linux":
    env_ssh2.Append(
        CPPPATH=[
            "libssh2/include/",
            "libssh2/vms/"
        ]
    )
    env_ssh2.Append(
        CPPDEFINES=[
            "LIBSSH2_OPENSSL"
        ]
    )

env_ssh2.StaticLibrary(target = "../bin/" + "ssh2", source = libssh2_sources)
